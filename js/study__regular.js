'use strict';

(function () {
// Для работы с т.информацией в JS существует спец. объект RegExp
// Который позволяет искать текст и элементы текста при помощи
// специяльного языка - Регулярных выражений

let text = 'Первое правило бойцовского клуба – не упоминать о Бойцовском клубе.\n Второе правило бойцовского клуба – не упоминать о Бойцовском клубе! Третье правило клуба – если боец крикнул “стоп!”, выдохся или отключился, бой окончен. Четвертое правило – в бою участвуют лишь двое.';

// Создать объект RegExp можно двумя способами:
// 1 - при помощи конструктора
let regExpWithConstructor = new RegExp('клуб');
// 2 - при помощи специального
let regExpLiteral = /клуб/;

// Кроме прочего у РВ есть ключи поиска:
// g --- глобальный п.
// i --- регистронезависимый п.
// m --- многострочный п.
// y --- поиск, начиная с символа, который находится на позиции свойства lastindex
//       текущего регулярного выражения

// Управляющие символы могут создать более хитрые правила для поиска
// Например: учитывать окончания
regExpWithConstructor = new RegExp('клуб', 'g');
regExpLiteral = /^.*?бойцовск?(ого|ом) клуб/gim;

// У объекта RegExp есть 2 метода:
//  exec - выполняет поиск совпадений в строке. Он возвращает массив данных
//  test - тестирует совпадение в строке. Возвращает либо true либо false
console.log('test: ', regExpLiteral.test(text));
console.log('exec: ', regExpLiteral.exec(text));

// Помимо методов самого RegExp, этот объект можно использовать для операций со строками
// --- match - выполняет поиск совпадения в строке. Он возвращает массив данных либо null,
//             если совпадения отсутствуют
// --- search - тестирует на совпадения в строке. Он возвращает индекс совпадения или -1
// --- replace - выполняет поиск совпадения в строке. Он заменяет подстроку другой подстрокой, переданной вторым акгументом
// --- split - использует рег.выр. или фиксированную строку, чтобы разбить строку на массив
console.log('match: ', text.match(regExpLiteral));
console.log('search: ', text.search(regExpLiteral));
console.log('replace: ', text.replace(regExpLiteral, 'пароход'));
console.log('split: ', text.split(regExpLiteral));

// Все символы в регулярном выражении означают сами себя, кроме спец.символов

// Можно использовать для валидации формы или извлечения значений
let text2 = 'x: 228, y: 229';
let regExp = /^x: ([0-9]*), y: (\d*)/gi;
let matched = regExp.exec(text2);
console.log(matched); // 228 и 229
})();
